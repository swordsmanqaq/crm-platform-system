<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heng.mkt.mapper.BusinessMapper">
    <!--保存对象-->
    <insert id="insert" parameterType="Business" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_mkt_business(
                            name,
                            clue_id,
                            product_id,
                            product_name,
                            product_price,
                            state
        ) values(
                                   #{name},
                                   #{clue.id},
                                   #{product.id},
                                   #{productName},
                                   #{productPrice},
                                   #{state}
        )
    </insert>
    <!--删除对象-->
    <delete id="remove" parameterType="long">
        delete from t_mkt_business where id = #{id}
    </delete>

    <!--更新对象-->
    <update id="update" parameterType="Business">
        update t_mkt_business
        set

                            name = #{name},
                            clue_id = #{clue.id},
                            product_id = #{product.id},
                            product_name = #{productName},
                            product_price = #{productPrice},
                            state = #{state}
        where id = #{id}
    </update>
    <!--加载对象-->
    <select id="loadById" resultMap="BaseResultMap" parameterType="long">
        select * from t_mkt_business where id = #{id}
    </select>
    <!--加载所有对象-->
    <select id="loadAll" resultMap="BaseResultMap">
        select * from t_mkt_business
    </select>
    <!--//查询总数=参数（查询对象），返回值：long-->
    <select id="loadTotal" parameterType="BusinessQuery" resultType="Long">
        select count(*)
        from t_mkt_business b
        LEFT JOIN t_mkt_clue c on b.clue_id = c.id
        LEFT JOIN t_prod_product p on b.`product_id` = p.id
        <include refid="whereSql"/>
    </select>
    <!--//查询当前页数据=参数（查询对象），返回值:List-->
    <select id="pageList" parameterType="BusinessQuery" resultMap="BaseResultMap">
        select b.*, c.id as `cid`, c.full_name as `cfullname`, p.id as `pid`, p.`name` as `pname`
        from t_mkt_business b
        LEFT JOIN t_mkt_clue c on b.clue_id = c.id
        LEFT JOIN t_prod_product p on b.`product_id` = p.id
        <include refid="whereSql"/>
        limit #{start},#{pageSize}
    </select>


    <sql id="whereSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and (b.name like concat('%',#{keyword},'%'))
            </if>
        </where>
    </sql>

    <!--//批量删除-->
    <delete id="patchRemove" parameterType="arraylist">
        delete from t_mkt_business where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.heng.mkt.domain.Business">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="clue_id" property="clueId" />
        <result column="product_id" property="productId" />
        <result column="product_name" property="productName" />
        <result column="product_price" property="productPrice" />
        <result column="state" property="state" />
        <association property="clue" javaType="clue">
            <id column="cid" property="id"></id>
            <result column="cfullname" property="fullName"></result>
        </association>
        <association property="product" javaType="product">
            <id column="pid" property="id"></id>
            <result column="pname" property="name"></result>
        </association>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, clue_id AS clueId, product_id AS productId, product_name AS productName, product_price AS productPrice, state
    </sql>

</mapper>
