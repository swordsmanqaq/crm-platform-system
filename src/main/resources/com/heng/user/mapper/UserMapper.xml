<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heng.user.mapper.UserMapper">
    <!--保存对象-->
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_user_user(
                            username,
                            email,
                            phone,
                            salt,
                            password,
                            state,
                            age,
                            createtime,
                            headImg,
                            logininfo_id
        ) values(
                                   #{username},
                                   #{email},
                                   #{phone},
                                   #{salt},
                                   #{password},
                                   #{state},
                                   #{age},
                                   #{createtime},
                                   #{headImg},
                                   #{logininfoId}
        )
    </insert>
    <!--删除对象-->
    <delete id="remove" parameterType="long">
        delete from t_user_user where id = #{id}
    </delete>

    <!--更新对象-->
    <update id="update" parameterType="User">
        update t_user_user
        set

                            username = #{username},
                            email = #{email},
                            phone = #{phone},
                            salt = #{salt},
                            password = #{password},
                            state = #{state},
                            age = #{age},
                            createtime = #{createtime},
                            headImg = #{headImg},
                            logininfo_id = #{logininfoId}
        where id = #{id}
    </update>
    <!--加载对象-->
    <select id="loadById" resultMap="BaseResultMap" parameterType="long">
        select * from t_user_user where id = #{id}
    </select>
    <!--加载所有对象-->
    <select id="loadAll" resultMap="BaseResultMap">
        select * from t_user_user
    </select>
    <!--//查询总数=参数（查询对象），返回值：long-->
    <select id="loadTotal" parameterType="UserQuery" resultType="Long">
        select count(*) from t_user_user
        <include refid="whereSql"/>
    </select>
    <!--//查询当前页数据=参数（查询对象），返回值:List-->
    <select id="pageList" parameterType="UserQuery" resultMap="BaseResultMap">
        select * from t_user_user
        <include refid="whereSql"/>
        limit #{start},#{pageSize}
    </select>

    <select id="loadByUsername" resultType="com.heng.user.domain.User">
        select *
        from t_user_user
        where username = #{username};
    </select>


    <sql id="whereSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and (name like concat('%',#{keyword},'%'))
            </if>
        </where>
    </sql>

    <!--//批量删除-->
    <delete id="patchRemove" parameterType="arraylist">
        delete from t_user_user where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.heng.user.domain.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="salt" property="salt" />
        <result column="password" property="password" />
        <result column="state" property="state" />
        <result column="age" property="age" />
        <result column="createtime" property="createtime" />
        <result column="headImg" property="headImg" />
        <result column="logininfo_id" property="logininfoId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, username, email, phone, salt, password, state, age, createtime, headImg, logininfo_id AS logininfoId
    </sql>

</mapper>
