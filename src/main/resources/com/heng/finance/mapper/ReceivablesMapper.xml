<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heng.finance.mapper.ReceivablesMapper">
    <!--保存对象-->
    <insert id="insert" parameterType="Receivables" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_finance_receivables(
                            contract_id,
                            customer_id,
                            customer_name,
                            product_id,
                            product_name,
                            price,
                            payment_method_id,
                            create_time,
                            update_time
        ) values(
                                   #{contractId},
                                   #{customerId},
                                   #{customerName},
                                   #{productId},
                                   #{productName},
                                   #{price},
                                   #{paymentMethodId},
                                   #{createTime},
                                   #{updateTime}
        )
    </insert>
    <!--删除对象-->
    <delete id="remove" parameterType="long">
        delete from t_finance_receivables where id = #{id}
    </delete>

    <!--更新对象-->
    <update id="update" parameterType="Receivables">
        update t_finance_receivables
        set

                            contract_id = #{contractId},
                            customer_id = #{customerId},
                            customer_name = #{customerName},
                            product_id = #{productId},
                            product_name = #{productName},
                            price = #{price},
                            payment_method_id = #{paymentMethodId},
                            create_time = #{createTime},
                            update_time = #{updateTime}
        where id = #{id}
    </update>
    <!--加载对象-->
    <select id="loadById" resultMap="BaseResultMap" parameterType="long">
        select * from t_finance_receivables where id = #{id}
    </select>
    <!--加载所有对象-->
    <select id="loadAll" resultMap="BaseResultMap">
        select * from t_finance_receivables
    </select>
    <!--//查询总数=参数（查询对象），返回值：long-->
    <select id="loadTotal" parameterType="ReceivablesQuery" resultType="Long">
        select count(*) from t_finance_receivables
        <include refid="whereSql"/>
    </select>
    <!--//查询当前页数据=参数（查询对象），返回值:List-->
    <select id="pageList" parameterType="ReceivablesQuery" resultMap="BaseResultMap">
        select * from t_finance_receivables
        <include refid="whereSql"/>
        limit #{start},#{pageSize}
    </select>


    <sql id="whereSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and (name like concat('%',#{keyword},'%'))
            </if>
        </where>
    </sql>

    <!--//批量删除-->
    <delete id="patchRemove" parameterType="arraylist">
        delete from t_finance_receivables where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.heng.finance.domain.Receivables">
        <id column="id" property="id" />
        <result column="contract_id" property="contractId" />
        <result column="customer_id" property="customerId" />
        <result column="customer_name" property="customerName" />
        <result column="product_id" property="productId" />
        <result column="product_name" property="productName" />
        <result column="price" property="price" />
        <result column="payment_method_id" property="paymentMethodId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, contract_id AS contractId, customer_id AS customerId, customer_name AS customerName, product_id AS productId, product_name AS productName, price, payment_method_id AS paymentMethodId, create_time AS createTime, update_time AS updateTime
    </sql>

</mapper>
